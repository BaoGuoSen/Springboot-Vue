<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
			PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
			"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mybatis.demo.dao.TeacherMapper">

	
	<resultMap type="mybatis.demo.entity.work" id="work">
		
		<result property="cflag" column="cflag" jdbcType="INTEGER"/>
		<result property="title" column="title" jdbcType="VARCHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="date" column="date" jdbcType="DATE"/>
		<result property="deadline" column="deadline" jdbcType="DATE"/>
		<result property="wid" column="wid" jdbcType="INTEGER"/>

	</resultMap>


	<resultMap type="mybatis.demo.entity.course" id="courseMap">
		
		<result property="cname" column="cname" jdbcType="VARCHAR"/>
		<result property="cflag" column="cflag" jdbcType="INTEGER"/>
		<result property="uid" column="uid" jdbcType="INTEGER"/>
		<result property="state" column="state" jdbcType="TINYINT"/>
		<result property="wid" column="wid" jdbcType="INTEGER"/>
		<result property="teacher" column="teacher" jdbcType="VARCHAR"/>

	</resultMap>
	
	<resultMap type="mybatis.demo.entity.user" id="user">
	
		<result property="id" column="id" jdbcType="INTEGER"/>
		<result property="username" column="username" jdbcType="VARCHAR"/>
	
	</resultMap>
	
	
	<select id="getallcourse" resultMap="courseMap">
		select * from course where uid=#{id, jdbcType=INTEGER}
	</select>
	
	<select id="getcoursebyflag" resultMap="courseMap">
		select * from course where cflag=#{cflag, jdbcType=INTEGER}
	</select>
	
	<select id="getcoursemates" resultType="java.lang.Integer" parameterType="java.util.HashMap">
		select count(distinct uid) from c_stu where cflag=#{cflag, jdbcType=INTEGER}
	</select>
	
	<select id="getallwork" resultMap="work">
		select * from work where cflag=#{cflag, jdbcType=INTEGER}
	</select>
	
	<select id="findallstudent" resultMap="user">
		select id,username from user where id in(
			select uid from c_stu where cflag=#{cflag, jdbcType=INTEGER}
		)
	</select>
	
	<select id="findteacher" resultMap="user">
		select id,username from user where id in(
			select uid from course where cflag=#{cflag, jdbcType=INTEGER}
		)
	</select>
	
	<select id="findbyname" resultType="user">
		select id,username from user where username LIKE CONCAT('%',#{name},'%')
	</select>
	
	<select id="findnotup" resultType="user">
		select id,username from user where id not in(
			select id from upwork where wid= #{wid, jdbcType=INTEGER}
		)
		and id in(
			select uid from user_role where rid !=1
		)
	</select>
	
	<select id="findup" resultType="mybatis.demo.entity.upwork">
		select * from upwork where wid=#{wid, jdbcType=INTEGER}
	</select>
	
	<select id="getscores" resultType="mybatis.demo.entity.score">
		select work.wid,title,username,score from work,upwork 
			where work.wid=upwork.wid and work.cflag=#{cflag, jdbcType=INTEGER}
	</select>
	
	 <insert id="addcourse" useGeneratedKeys="true" parameterType="mybatis.demo.entity.course">
		insert into course 
		<trim prefix="(" suffix=")" suffixOverrides="," >
           cname,cflag,uid,state,teacher
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
        	   #{cname, jdbcType=VARCHAR},
               #{cflag, jdbcType=INTEGER},
               #{uid, jdbcType=INTEGER},
    		   #{state, jdbcType=TINYINT},
    		   #{teacher, jdbcType=VARCHAR}
        </trim>
	</insert>
	
	<insert id="addwork" useGeneratedKeys="true" parameterType="mybatis.demo.entity.work">
		insert into work 
		<trim prefix="(" suffix=")" suffixOverrides="," >
           cflag,title,content,date,deadline
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
        	   #{cflag, jdbcType=INTEGER},
               #{title, jdbcType=VARCHAR},
               #{content, jdbcType=VARCHAR},
    		   #{date, jdbcType=DATE},
    		   #{deadline, jdbcType=DATE}
        </trim>
	</insert>
	
	<delete id="deletecourse" parameterType="mybatis.demo.entity.course">
		delete from course where cflag = #{id, jdbcType=INTEGER}
	</delete>
	
	<delete id="deletework" parameterType="mybatis.demo.entity.work">
		delete from work where wid = #{wid, jdbcType=INTEGER}
	</delete>
	
	<update id="updatecourse" parameterType="mybatis.demo.entity.course">
		update course 
		<set>
				cname=#{cname, jdbcType=VARCHAR},
		</set>
		where cflag=#{cflag,jdbcType=INTEGER}
	</update>
	
	<update id="guidang" parameterType="mybatis.demo.entity.course">
		update course 
		<set>
				state=#{state, jdbcType=TINYINT},
		</set>
		where cflag=#{cflag,jdbcType=INTEGER}
	</update>
	
	<update id="recover" parameterType="mybatis.demo.entity.course">
		update course 
		<set>
				state=#{state, jdbcType=TINYINT},
		</set>
		where cflag=#{cflag,jdbcType=INTEGER}
	</update>
	
	<update id="updatework" parameterType="mybatis.demo.entity.work">
		update work 
		<set>
				title=#{title, jdbcType=VARCHAR},
				content=#{content, jdbcType=VARCHAR},
				date=#{date, jdbcType=DATE},
				deadline=#{deadline, jdbcType=DATE}
		</set>
		where wid=#{wid,jdbcType=INTEGER}
	</update>
	
	<update id="addscore" parameterType="mybatis.demo.entity.upwork">
		update upwork 
		<set>
				score=#{score, jdbcType=INTEGER},
				
		</set>
		where id=#{id,jdbcType=INTEGER} and wid=#{wid,jdbcType=INTEGER}
	</update>

</mapper>